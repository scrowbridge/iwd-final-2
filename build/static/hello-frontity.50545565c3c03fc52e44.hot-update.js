webpackHotUpdate("hello-frontity",{

/***/ "./packages/books/src/components/index.js":
/*!************************************************!*\
  !*** ./packages/books/src/components/index.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _frontity_components_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @frontity/components/link */ \"./node_modules/@frontity/components/link/index.tsx\");\n/* harmony import */ var _frontity_components_switch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @frontity/components/switch */ \"./node_modules/@frontity/components/switch.tsx\");\n/* harmony import */ var _list__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./list */ \"./packages/books/src/components/list.js\");\n/* harmony import */ var _post__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./post */ \"./packages/books/src/components/post.js\");\n/* harmony import */ var _page__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./page */ \"./packages/books/src/components/page.js\");\n/* harmony import */ var _loading__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./loading */ \"./packages/books/src/components/loading.js\");\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./error */ \"./packages/books/src/components/error.js\");\n/* harmony import */ var _home__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./home */ \"./packages/books/src/components/home.js\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var _ref= false?undefined:{name:\"1pv7054-Root\",styles:\"*{margin:0;padding:0;box-sizing:border-box;}html{font-family:Verdana,sans-serif;}h1,h2,h3,h4,h5,h6{font-weight:300;};label:Root;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};const Root=({state,actions})=>{const data=state.source.get(state.router.link);return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsxs\"])(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"Fragment\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsxs\"])(frontity__WEBPACK_IMPORTED_MODULE_1__[\"Head\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"title\",{children:\"Nicholas Sparks - American Novelist\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"meta\",{name:\"Nicholas Sparks is a famous author..\",content:\"Based on the Frontity step by step tutorial\"})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(frontity__WEBPACK_IMPORTED_MODULE_1__[\"Global\"],{styles:_ref}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsxs\"])(Header,{isPostType:data.isPostType,isPage:data.isPage,children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"div\",{id:\"top\",children:\" \"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsxs\"])(HeaderContent,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"h1\",{children:\"Nicholas Sparks\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"p\",{id:\"site-description\",children:\"American Novelist\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsxs\"])(Menu,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{link:\"/\",children:\"Home\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"br\",{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{link:\"/author-bio\",children:\"About\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"br\",{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{link:\"/book\",children:\"Books\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"br\",{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{link:\"/contact\",children:\"Contact Us\"})]})]})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"hr\",{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(Main,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsxs\"])(_frontity_components_switch__WEBPACK_IMPORTED_MODULE_3__[\"default\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_loading__WEBPACK_IMPORTED_MODULE_7__[\"default\"],{when:data.isFetching}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_list__WEBPACK_IMPORTED_MODULE_4__[\"default\"],{when:data.isArchive}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_home__WEBPACK_IMPORTED_MODULE_9__[\"default\"],{when:data.isHome}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_post__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{when:data.isPost}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_page__WEBPACK_IMPORTED_MODULE_6__[\"default\"],{when:data.isPage}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_page__WEBPACK_IMPORTED_MODULE_6__[\"default\"],{when:data.isBook}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_error__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{when:data.isError})]})})]});};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(Root));const Header=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"header\", false?undefined:{target:\"emeuo953\",label:\"Header\"})(\"background-color:#ededed;border-width:0 0 1px 0;border-style:solid;border-color:\",props=>props.isPostType?props.isPage?'#FBACA5':'#61adad':'lightgrey',\";h1{color:#4c4c4c;font-size:49px;text-align:center;font-weight:200;}#site-description{text-align:center;line-height:1.5;font-size:0.9em;padding-top:5px;}#top{background-color:#FBACA5;color:#FBACA5;padding:2px 0;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));const HeaderContent=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"div\", false?undefined:{target:\"emeuo952\",label:\"HeaderContent\"})( false?undefined:{name:\"1peo0kf\",styles:\"max-width:800px;padding:2em 1em;margin:auto\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Main=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"main\", false?undefined:{target:\"emeuo951\",label:\"Main\"})( false?undefined:{name:\"hlk686\",styles:\"max-width:800px;padding:1em;margin:auto;img{max-width:100%;height:auto;}h2{margin:0.5em 0;color:#61adad;font-family:lato;font-size:40px;padding:30px 0;}p{line-height:1.5em;margin-bottom:0.75em;}figcaption{color:#828282;font-size:0.8em;margin-bottom:1em;}.shortcode_review{margin-top:50px;width:60%;h4{color:#61adad;font-size:28px;margin-bottom:18px;}h5{padding:12px 0;}a{text-decoration:none;color:#faaca5;font-size:23px;}a:hover{text-decoration:underline;}ul{list-style:none;padding-top:5px;font-size:14px;li{padding:4px 2%;}}p{margin-top:20px;line-height:1.5;}}.book_details{margin:20px 0;ul{list-style:none;font-size:16px;}h4{color:#61adad;font-size:28px;margin-bottom:18px;margin-top:40px;}h6{color:#faaca5;font-size:23px;margin-top:30px;}}.review-details,.review-content{display:none;}.review_body p{font-size:16px;color:#5c5c5c;}.review-detail ul li{font-size:14px;}blockquote{color:#faaca5;font-style:italic;margin:50px 10%;width:80%;text-align:center;}.wp-block-image{margin:30px 0;width:80%;height:auto;}.wp-block-columns{display:flex;width:100%;.wp-block-column{width:40%;h5{color:#61adad;font-size:23px;margin:20px 0 10px 0;}ul{list-style:none;li{padding:8px 0;font-size:17px font-weight:300;}}}}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcU2FyYVxcRGVza3RvcFxcaXdkXFxpd2QtZmluYWxcXGhlbGxvLWZyb250aXR5XFxwYWNrYWdlc1xcYm9va3NcXHNyY1xcY29tcG9uZW50c1xcaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUd3QiIsImZpbGUiOiJDOlxcVXNlcnNcXFNhcmFcXERlc2t0b3BcXGl3ZFxcaXdkLWZpbmFsXFxoZWxsby1mcm9udGl0eVxccGFja2FnZXNcXGJvb2tzXFxzcmNcXGNvbXBvbmVudHNcXGluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiXHJcbmltcG9ydCB7IGNvbm5lY3QsIEdsb2JhbCwgY3NzLCBzdHlsZWQsIEhlYWQgfSBmcm9tIFwiZnJvbnRpdHlcIlxyXG5pbXBvcnQgTGluayBmcm9tIFwiQGZyb250aXR5L2NvbXBvbmVudHMvbGlua1wiXHJcbmltcG9ydCBTd2l0Y2ggZnJvbSBcIkBmcm9udGl0eS9jb21wb25lbnRzL3N3aXRjaFwiXHJcbmltcG9ydCBMaXN0IGZyb20gXCIuL2xpc3RcIlxyXG5pbXBvcnQgUG9zdCBmcm9tIFwiLi9wb3N0XCJcclxuaW1wb3J0IFBhZ2UgZnJvbSBcIi4vcGFnZVwiXHJcbmltcG9ydCBMb2FkaW5nIGZyb20gXCIuL2xvYWRpbmdcIlxyXG5pbXBvcnQgRXJyb3IgZnJvbSBcIi4vZXJyb3JcIlxyXG5pbXBvcnQgSG9tZSBmcm9tIFwiLi9ob21lXCJcclxuXHJcbmNvbnN0IFJvb3QgPSAoeyBzdGF0ZSwgYWN0aW9ucyB9KSA9PiB7XHJcbiAgICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluaylcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPD5cclxuICAgICAgICAgICAgPEhlYWQ+XHJcbiAgICAgICAgICAgICAgICA8dGl0bGU+TmljaG9sYXMgU3BhcmtzIC0gQW1lcmljYW4gTm92ZWxpc3Q8L3RpdGxlPlxyXG4gICAgICAgICAgICAgICAgPG1ldGFcclxuICAgICAgICAgICAgICAgICAgICBuYW1lPVwiTmljaG9sYXMgU3BhcmtzIGlzIGEgZmFtb3VzIGF1dGhvci4uXCJcclxuICAgICAgICAgICAgICAgICAgICBjb250ZW50PVwiQmFzZWQgb24gdGhlIEZyb250aXR5IHN0ZXAgYnkgc3RlcCB0dXRvcmlhbFwiXHJcbiAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8L0hlYWQ+XHJcbiAgICAgICAgPEdsb2JhbFxyXG4gICAgICAgICAgICBzdHlsZXM9e2Nzc2BcclxuICAgICAgICAgICAgICAqIHtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBodG1sIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBWZXJkYW5hLCBzYW5zLXNlcmlmOyBcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgaDEsaDIsaDMsaDQsaDUsaDYge1xyXG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgICAgICAgICAgICAgfVxyXG4gICBcclxuICAgICAgICBgfVxyXG4gICAgICAgICAgICAvPlxyXG5cclxuICAgICAgICAgICAgPEhlYWRlciBpc1Bvc3RUeXBlPXtkYXRhLmlzUG9zdFR5cGV9IGlzUGFnZT17ZGF0YS5pc1BhZ2V9PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBpZD1cInRvcFwiPiA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxIZWFkZXJDb250ZW50PlxyXG4gICAgICAgICAgICAgICAgPGgxPk5pY2hvbGFzIFNwYXJrczwvaDE+XHJcbiAgICAgICAgICAgICAgICA8cCBpZD1cInNpdGUtZGVzY3JpcHRpb25cIj5BbWVyaWNhbiBOb3ZlbGlzdDwvcD5cclxuICAgICAgICAgICAgICAgIDxNZW51PlxyXG4gICAgICAgICAgICAgICAgICAgIDxMaW5rIGxpbms9XCIvXCI+SG9tZTwvTGluaz5cclxuICAgICAgICAgICAgICAgICAgICA8YnIgLz5cclxuICAgICAgICAgICAgICAgICAgICA8TGluayBsaW5rPVwiL2F1dGhvci1iaW9cIj5BYm91dDwvTGluaz5cclxuICAgICAgICAgICAgICAgICAgICA8YnIgLz5cclxuICAgICAgICAgICAgICAgICAgICA8TGluayBsaW5rPVwiL2Jvb2tcIj5Cb29rczwvTGluaz5cclxuICAgICAgICAgICAgICAgICAgICA8YnIgLz5cclxuICAgICAgICAgICAgICAgICAgICA8TGluayBsaW5rPVwiL2NvbnRhY3RcIj5Db250YWN0IFVzPC9MaW5rPlxyXG4gICAgICAgICAgICAgICAgPC9NZW51PlxyXG4gICAgICAgICAgICAgICAgPC9IZWFkZXJDb250ZW50PlxyXG4gICAgICAgICAgICA8L0hlYWRlcj5cclxuICAgICAgICAgICAgPGhyIC8+XHJcbiAgICAgICAgICAgIDxNYWluPlxyXG4gICAgICAgICAgICAgICAgPFN3aXRjaD5cclxuICAgICAgICAgICAgICAgICAgICA8TG9hZGluZyB3aGVuPXtkYXRhLmlzRmV0Y2hpbmd9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPExpc3Qgd2hlbj17ZGF0YS5pc0FyY2hpdmV9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPEhvbWUgd2hlbj17ZGF0YS5pc0hvbWV9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPFBvc3Qgd2hlbj17ZGF0YS5pc1Bvc3R9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPFBhZ2Ugd2hlbj17ZGF0YS5pc1BhZ2V9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPFBhZ2Ugd2hlbj17ZGF0YS5pc0Jvb2t9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPEVycm9yIHdoZW49e2RhdGEuaXNFcnJvcn0gLz5cclxuICAgICAgICAgICAgICAgIDwvU3dpdGNoPlxyXG4gICAgICAgICAgICA8L01haW4+XHJcbiAgICAgICAgPC8+XHJcbiAgICApXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoUm9vdClcclxuXHJcbmNvbnN0IEhlYWRlciA9IHN0eWxlZC5oZWFkZXJgXHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VkZWRlZDtcclxuICBib3JkZXItd2lkdGg6IDAgMCAxcHggMDtcclxuICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4gIGJvcmRlci1jb2xvcjogJHsgcHJvcHMgPT4gcHJvcHMuaXNQb3N0VHlwZSA/ICggcHJvcHMuaXNQYWdlID8gJyNGQkFDQTUnIDogJyM2MWFkYWQnICkgOiAnbGlnaHRncmV5J307XHJcblxyXG4gIGgxIHtcclxuICAgIGNvbG9yOiAjNGM0YzRjO1xyXG4gICAgZm9udC1zaXplOiA0OXB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC13ZWlnaHQ6IDIwMDtcclxuICAgIFxyXG4gIH1cclxuICAjc2l0ZS1kZXNjcmlwdGlvbiB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBsaW5lLWhlaWdodDogMS41O1xyXG4gICAgZm9udC1zaXplOiAwLjllbTtcclxuICAgIHBhZGRpbmctdG9wOiA1cHg7XHJcbiAgfVxyXG4gIFxyXG4gICN0b3Age1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0ZCQUNBNTtcclxuICAgIGNvbG9yOiAjRkJBQ0E1O1xyXG4gICAgcGFkZGluZzogMnB4IDA7XHJcbn1cclxuYFxyXG5jb25zdCBIZWFkZXJDb250ZW50ID0gc3R5bGVkLmRpdmBcclxuICBtYXgtd2lkdGg6IDgwMHB4O1xyXG4gIHBhZGRpbmc6IDJlbSAxZW07XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG4gIFxyXG5gXHJcbmNvbnN0IE1haW4gPSBzdHlsZWQubWFpbmBcclxuICBtYXgtd2lkdGg6IDgwMHB4O1xyXG4gIHBhZGRpbmc6IDFlbTtcclxuICBtYXJnaW46IGF1dG87XHJcblxyXG4gIGltZyB7XHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgfVxyXG4gIGgyIHtcclxuICAgIG1hcmdpbjogMC41ZW0gMDtcclxuICAgIGNvbG9yOiAjNjFhZGFkO1xyXG4gICAgZm9udC1mYW1pbHk6IGxhdG87XHJcbiAgICBmb250LXNpemU6IDQwcHg7XHJcbiAgICBwYWRkaW5nOiAzMHB4IDA7XHJcbiAgfVxyXG4gIHAge1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuNWVtO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMC43NWVtO1xyXG4gIH1cclxuICBmaWdjYXB0aW9uIHtcclxuICAgIGNvbG9yOiAjODI4MjgyO1xyXG4gICAgZm9udC1zaXplOiAwLjhlbTtcclxuICAgIG1hcmdpbi1ib3R0b206IDFlbTtcclxuICB9XHJcbiAgLnNob3J0Y29kZV9yZXZpZXcgeyAgXHJcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gICAgd2lkdGg6IDYwJTtcclxuICBcclxuICAgIGg0e1xyXG4gICAgICAgIGNvbG9yOiAjNjFhZGFkO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjhweDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxOHB4O1xyXG4gICAgfVxyXG4gICAgaDUge1xyXG4gICAgICAgIHBhZGRpbmc6IDEycHggMDtcclxuICAgIH0gICAgXHJcbiAgICBhIHtcclxuICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgIGNvbG9yOiAjZmFhY2E1O1xyXG4gICAgICAgZm9udC1zaXplOiAyM3B4O1xyXG5cclxuICAgIH1cclxuICAgIGE6aG92ZXIge1xyXG4gICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICB9XHJcbiAgICB1bCB7XHJcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgICAgICBwYWRkaW5nLXRvcDogNXB4O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgICBsaSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDRweCAyJTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBwIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7XHJcbiAgICB9XHJcbn0gICBcclxuLmJvb2tfZGV0YWlscyB7XHJcbiAgICBtYXJnaW46IDIwcHggMDtcclxuICAgIFxyXG4gICAgdWwge1xyXG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgfVxyXG4gICAgaDQge1xyXG4gICAgICBjb2xvcjogIzYxYWRhZDtcclxuICAgICAgZm9udC1zaXplOiAyOHB4O1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAxOHB4O1xyXG4gICAgICBtYXJnaW4tdG9wOiA0MHB4O1xyXG4gICAgfVxyXG4gICAgaDYge1xyXG4gICAgY29sb3I6ICNmYWFjYTU7XHJcbiAgICBmb250LXNpemU6IDIzcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgfVxyXG59XHJcbi5yZXZpZXctZGV0YWlscywgLnJldmlldy1jb250ZW50IHtcclxuICAgZGlzcGxheTpub25lO1xyXG59XHJcbi5yZXZpZXdfYm9keSBwe1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgY29sb3I6ICM1YzVjNWM7XHJcbn0gIFxyXG4ucmV2aWV3LWRldGFpbCB1bCBsaXtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5ibG9ja3F1b3RlIHtcclxuICAgIGNvbG9yOiAjZmFhY2E1O1xyXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgbWFyZ2luOiA1MHB4IDEwJTtcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgIH1cclxuLndwLWJsb2NrLWltYWdlIHtcclxuICAgIG1hcmdpbjogMzBweCAwO1xyXG4gICAgd2lkdGg6IDgwJTtcclxuICAgIGhlaWdodDogYXV0bztcclxufVxyXG4ud3AtYmxvY2stY29sdW1ucyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBcclxuICAgIC53cC1ibG9jay1jb2x1bW4ge1xyXG4gICAgICAgIHdpZHRoOiA0MCU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgaDUge1xyXG4gICAgICAgICAgICBjb2xvcjogIzYxYWRhZDtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyM3B4O1xyXG4gICAgICAgICAgICBtYXJnaW46IDIwcHggMCAxMHB4IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHVsIHtcclxuICAgICAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGxpIHtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDhweCAwO1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxN3B4XHJcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogMzAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbmBcclxuY29uc3QgTWVudSA9IHN0eWxlZC5uYXZgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gIG1hcmdpbi10b3A6IDFlbTtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDFlbTtcclxuICBcclxuICAmID4gYSB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDFlbTtcclxuICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgcGFkZGluZy10b3A6IDMwcHg7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAyNXB4O1xyXG4gfVxyXG4gXHJcbiBhOmhvdmVyIHtcclxuICAgICBjb2xvcjogIzk0OTQ5NDtcclxuIH1cclxuYCJdfQ== */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Menu=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"nav\", false?undefined:{target:\"emeuo950\",label:\"Menu\"})( false?undefined:{name:\"148vwh9\",styles:\"display:flex;flex-direction:row;margin-top:1em;font-size:16px;margin-left:1em;&>a{margin-right:1em;color:#000;text-decoration:none;padding-top:30px;padding-right:25px;}a:hover{color:#949494;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcU2FyYVxcRGVza3RvcFxcaXdkXFxpd2QtZmluYWxcXGhlbGxvLWZyb250aXR5XFxwYWNrYWdlc1xcYm9va3NcXHNyY1xcY29tcG9uZW50c1xcaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcU91QiIsImZpbGUiOiJDOlxcVXNlcnNcXFNhcmFcXERlc2t0b3BcXGl3ZFxcaXdkLWZpbmFsXFxoZWxsby1mcm9udGl0eVxccGFja2FnZXNcXGJvb2tzXFxzcmNcXGNvbXBvbmVudHNcXGluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiXHJcbmltcG9ydCB7IGNvbm5lY3QsIEdsb2JhbCwgY3NzLCBzdHlsZWQsIEhlYWQgfSBmcm9tIFwiZnJvbnRpdHlcIlxyXG5pbXBvcnQgTGluayBmcm9tIFwiQGZyb250aXR5L2NvbXBvbmVudHMvbGlua1wiXHJcbmltcG9ydCBTd2l0Y2ggZnJvbSBcIkBmcm9udGl0eS9jb21wb25lbnRzL3N3aXRjaFwiXHJcbmltcG9ydCBMaXN0IGZyb20gXCIuL2xpc3RcIlxyXG5pbXBvcnQgUG9zdCBmcm9tIFwiLi9wb3N0XCJcclxuaW1wb3J0IFBhZ2UgZnJvbSBcIi4vcGFnZVwiXHJcbmltcG9ydCBMb2FkaW5nIGZyb20gXCIuL2xvYWRpbmdcIlxyXG5pbXBvcnQgRXJyb3IgZnJvbSBcIi4vZXJyb3JcIlxyXG5pbXBvcnQgSG9tZSBmcm9tIFwiLi9ob21lXCJcclxuXHJcbmNvbnN0IFJvb3QgPSAoeyBzdGF0ZSwgYWN0aW9ucyB9KSA9PiB7XHJcbiAgICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluaylcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPD5cclxuICAgICAgICAgICAgPEhlYWQ+XHJcbiAgICAgICAgICAgICAgICA8dGl0bGU+TmljaG9sYXMgU3BhcmtzIC0gQW1lcmljYW4gTm92ZWxpc3Q8L3RpdGxlPlxyXG4gICAgICAgICAgICAgICAgPG1ldGFcclxuICAgICAgICAgICAgICAgICAgICBuYW1lPVwiTmljaG9sYXMgU3BhcmtzIGlzIGEgZmFtb3VzIGF1dGhvci4uXCJcclxuICAgICAgICAgICAgICAgICAgICBjb250ZW50PVwiQmFzZWQgb24gdGhlIEZyb250aXR5IHN0ZXAgYnkgc3RlcCB0dXRvcmlhbFwiXHJcbiAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8L0hlYWQ+XHJcbiAgICAgICAgPEdsb2JhbFxyXG4gICAgICAgICAgICBzdHlsZXM9e2Nzc2BcclxuICAgICAgICAgICAgICAqIHtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBodG1sIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBWZXJkYW5hLCBzYW5zLXNlcmlmOyBcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgaDEsaDIsaDMsaDQsaDUsaDYge1xyXG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgICAgICAgICAgICAgfVxyXG4gICBcclxuICAgICAgICBgfVxyXG4gICAgICAgICAgICAvPlxyXG5cclxuICAgICAgICAgICAgPEhlYWRlciBpc1Bvc3RUeXBlPXtkYXRhLmlzUG9zdFR5cGV9IGlzUGFnZT17ZGF0YS5pc1BhZ2V9PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBpZD1cInRvcFwiPiA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxIZWFkZXJDb250ZW50PlxyXG4gICAgICAgICAgICAgICAgPGgxPk5pY2hvbGFzIFNwYXJrczwvaDE+XHJcbiAgICAgICAgICAgICAgICA8cCBpZD1cInNpdGUtZGVzY3JpcHRpb25cIj5BbWVyaWNhbiBOb3ZlbGlzdDwvcD5cclxuICAgICAgICAgICAgICAgIDxNZW51PlxyXG4gICAgICAgICAgICAgICAgICAgIDxMaW5rIGxpbms9XCIvXCI+SG9tZTwvTGluaz5cclxuICAgICAgICAgICAgICAgICAgICA8YnIgLz5cclxuICAgICAgICAgICAgICAgICAgICA8TGluayBsaW5rPVwiL2F1dGhvci1iaW9cIj5BYm91dDwvTGluaz5cclxuICAgICAgICAgICAgICAgICAgICA8YnIgLz5cclxuICAgICAgICAgICAgICAgICAgICA8TGluayBsaW5rPVwiL2Jvb2tcIj5Cb29rczwvTGluaz5cclxuICAgICAgICAgICAgICAgICAgICA8YnIgLz5cclxuICAgICAgICAgICAgICAgICAgICA8TGluayBsaW5rPVwiL2NvbnRhY3RcIj5Db250YWN0IFVzPC9MaW5rPlxyXG4gICAgICAgICAgICAgICAgPC9NZW51PlxyXG4gICAgICAgICAgICAgICAgPC9IZWFkZXJDb250ZW50PlxyXG4gICAgICAgICAgICA8L0hlYWRlcj5cclxuICAgICAgICAgICAgPGhyIC8+XHJcbiAgICAgICAgICAgIDxNYWluPlxyXG4gICAgICAgICAgICAgICAgPFN3aXRjaD5cclxuICAgICAgICAgICAgICAgICAgICA8TG9hZGluZyB3aGVuPXtkYXRhLmlzRmV0Y2hpbmd9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPExpc3Qgd2hlbj17ZGF0YS5pc0FyY2hpdmV9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPEhvbWUgd2hlbj17ZGF0YS5pc0hvbWV9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPFBvc3Qgd2hlbj17ZGF0YS5pc1Bvc3R9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPFBhZ2Ugd2hlbj17ZGF0YS5pc1BhZ2V9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPFBhZ2Ugd2hlbj17ZGF0YS5pc0Jvb2t9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPEVycm9yIHdoZW49e2RhdGEuaXNFcnJvcn0gLz5cclxuICAgICAgICAgICAgICAgIDwvU3dpdGNoPlxyXG4gICAgICAgICAgICA8L01haW4+XHJcbiAgICAgICAgPC8+XHJcbiAgICApXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoUm9vdClcclxuXHJcbmNvbnN0IEhlYWRlciA9IHN0eWxlZC5oZWFkZXJgXHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VkZWRlZDtcclxuICBib3JkZXItd2lkdGg6IDAgMCAxcHggMDtcclxuICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4gIGJvcmRlci1jb2xvcjogJHsgcHJvcHMgPT4gcHJvcHMuaXNQb3N0VHlwZSA/ICggcHJvcHMuaXNQYWdlID8gJyNGQkFDQTUnIDogJyM2MWFkYWQnICkgOiAnbGlnaHRncmV5J307XHJcblxyXG4gIGgxIHtcclxuICAgIGNvbG9yOiAjNGM0YzRjO1xyXG4gICAgZm9udC1zaXplOiA0OXB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC13ZWlnaHQ6IDIwMDtcclxuICAgIFxyXG4gIH1cclxuICAjc2l0ZS1kZXNjcmlwdGlvbiB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBsaW5lLWhlaWdodDogMS41O1xyXG4gICAgZm9udC1zaXplOiAwLjllbTtcclxuICAgIHBhZGRpbmctdG9wOiA1cHg7XHJcbiAgfVxyXG4gIFxyXG4gICN0b3Age1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0ZCQUNBNTtcclxuICAgIGNvbG9yOiAjRkJBQ0E1O1xyXG4gICAgcGFkZGluZzogMnB4IDA7XHJcbn1cclxuYFxyXG5jb25zdCBIZWFkZXJDb250ZW50ID0gc3R5bGVkLmRpdmBcclxuICBtYXgtd2lkdGg6IDgwMHB4O1xyXG4gIHBhZGRpbmc6IDJlbSAxZW07XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG4gIFxyXG5gXHJcbmNvbnN0IE1haW4gPSBzdHlsZWQubWFpbmBcclxuICBtYXgtd2lkdGg6IDgwMHB4O1xyXG4gIHBhZGRpbmc6IDFlbTtcclxuICBtYXJnaW46IGF1dG87XHJcblxyXG4gIGltZyB7XHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgfVxyXG4gIGgyIHtcclxuICAgIG1hcmdpbjogMC41ZW0gMDtcclxuICAgIGNvbG9yOiAjNjFhZGFkO1xyXG4gICAgZm9udC1mYW1pbHk6IGxhdG87XHJcbiAgICBmb250LXNpemU6IDQwcHg7XHJcbiAgICBwYWRkaW5nOiAzMHB4IDA7XHJcbiAgfVxyXG4gIHAge1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuNWVtO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMC43NWVtO1xyXG4gIH1cclxuICBmaWdjYXB0aW9uIHtcclxuICAgIGNvbG9yOiAjODI4MjgyO1xyXG4gICAgZm9udC1zaXplOiAwLjhlbTtcclxuICAgIG1hcmdpbi1ib3R0b206IDFlbTtcclxuICB9XHJcbiAgLnNob3J0Y29kZV9yZXZpZXcgeyAgXHJcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gICAgd2lkdGg6IDYwJTtcclxuICBcclxuICAgIGg0e1xyXG4gICAgICAgIGNvbG9yOiAjNjFhZGFkO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjhweDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxOHB4O1xyXG4gICAgfVxyXG4gICAgaDUge1xyXG4gICAgICAgIHBhZGRpbmc6IDEycHggMDtcclxuICAgIH0gICAgXHJcbiAgICBhIHtcclxuICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgIGNvbG9yOiAjZmFhY2E1O1xyXG4gICAgICAgZm9udC1zaXplOiAyM3B4O1xyXG5cclxuICAgIH1cclxuICAgIGE6aG92ZXIge1xyXG4gICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICB9XHJcbiAgICB1bCB7XHJcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgICAgICBwYWRkaW5nLXRvcDogNXB4O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgICBsaSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDRweCAyJTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBwIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7XHJcbiAgICB9XHJcbn0gICBcclxuLmJvb2tfZGV0YWlscyB7XHJcbiAgICBtYXJnaW46IDIwcHggMDtcclxuICAgIFxyXG4gICAgdWwge1xyXG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgfVxyXG4gICAgaDQge1xyXG4gICAgICBjb2xvcjogIzYxYWRhZDtcclxuICAgICAgZm9udC1zaXplOiAyOHB4O1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAxOHB4O1xyXG4gICAgICBtYXJnaW4tdG9wOiA0MHB4O1xyXG4gICAgfVxyXG4gICAgaDYge1xyXG4gICAgY29sb3I6ICNmYWFjYTU7XHJcbiAgICBmb250LXNpemU6IDIzcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgfVxyXG59XHJcbi5yZXZpZXctZGV0YWlscywgLnJldmlldy1jb250ZW50IHtcclxuICAgZGlzcGxheTpub25lO1xyXG59XHJcbi5yZXZpZXdfYm9keSBwe1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgY29sb3I6ICM1YzVjNWM7XHJcbn0gIFxyXG4ucmV2aWV3LWRldGFpbCB1bCBsaXtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5ibG9ja3F1b3RlIHtcclxuICAgIGNvbG9yOiAjZmFhY2E1O1xyXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgbWFyZ2luOiA1MHB4IDEwJTtcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgIH1cclxuLndwLWJsb2NrLWltYWdlIHtcclxuICAgIG1hcmdpbjogMzBweCAwO1xyXG4gICAgd2lkdGg6IDgwJTtcclxuICAgIGhlaWdodDogYXV0bztcclxufVxyXG4ud3AtYmxvY2stY29sdW1ucyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBcclxuICAgIC53cC1ibG9jay1jb2x1bW4ge1xyXG4gICAgICAgIHdpZHRoOiA0MCU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgaDUge1xyXG4gICAgICAgICAgICBjb2xvcjogIzYxYWRhZDtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyM3B4O1xyXG4gICAgICAgICAgICBtYXJnaW46IDIwcHggMCAxMHB4IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHVsIHtcclxuICAgICAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGxpIHtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDhweCAwO1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxN3B4XHJcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogMzAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbmBcclxuY29uc3QgTWVudSA9IHN0eWxlZC5uYXZgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gIG1hcmdpbi10b3A6IDFlbTtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDFlbTtcclxuICBcclxuICAmID4gYSB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDFlbTtcclxuICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgcGFkZGluZy10b3A6IDMwcHg7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAyNXB4O1xyXG4gfVxyXG4gXHJcbiBhOmhvdmVyIHtcclxuICAgICBjb2xvcjogIzk0OTQ5NDtcclxuIH1cclxuYCJdfQ== */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/books/src/components/index.js\n");

/***/ })

})