webpackHotUpdate("hello-frontity",{

/***/ "./packages/books/src/components/index.js":
/*!************************************************!*\
  !*** ./packages/books/src/components/index.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _frontity_components_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @frontity/components/link */ \"./node_modules/@frontity/components/link/index.tsx\");\n/* harmony import */ var _frontity_components_switch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @frontity/components/switch */ \"./node_modules/@frontity/components/switch.tsx\");\n/* harmony import */ var _list__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./list */ \"./packages/books/src/components/list.js\");\n/* harmony import */ var _post__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./post */ \"./packages/books/src/components/post.js\");\n/* harmony import */ var _page__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./page */ \"./packages/books/src/components/page.js\");\n/* harmony import */ var _loading__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./loading */ \"./packages/books/src/components/loading.js\");\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./error */ \"./packages/books/src/components/error.js\");\n/* harmony import */ var _home__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./home */ \"./packages/books/src/components/home.js\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var _ref= false?undefined:{name:\"1pv7054-Root\",styles:\"*{margin:0;padding:0;box-sizing:border-box;}html{font-family:Verdana,sans-serif;}h1,h2,h3,h4,h5,h6{font-weight:300;};label:Root;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};const Root=({state,actions})=>{const data=state.source.get(state.router.link);return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsxs\"])(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"Fragment\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsxs\"])(frontity__WEBPACK_IMPORTED_MODULE_1__[\"Head\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"title\",{children:\"Nicholas Sparks - American Novelist\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"meta\",{name:\"Nicholas Sparks is a famous author..\",content:\"Based on the Frontity step by step tutorial\"})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(frontity__WEBPACK_IMPORTED_MODULE_1__[\"Global\"],{styles:_ref}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(Header,{isPostType:data.isPostType,isPage:data.isPage,children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsxs\"])(HeaderContent,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"h1\",{children:\"Nicholas Sparks\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"p\",{id:\"site-description\",children:\"American Novelist\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsxs\"])(Menu,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{link:\"/\",children:\"Home\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"br\",{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{link:\"/author-bio\",children:\"About\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"br\",{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{link:\"/book\",children:\"Books\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"br\",{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{link:\"/contact\",children:\"Contact Us\"})]})]})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"hr\",{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(Main,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsxs\"])(_frontity_components_switch__WEBPACK_IMPORTED_MODULE_3__[\"default\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_loading__WEBPACK_IMPORTED_MODULE_7__[\"default\"],{when:data.isFetching}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_list__WEBPACK_IMPORTED_MODULE_4__[\"default\"],{when:data.isArchive}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_home__WEBPACK_IMPORTED_MODULE_9__[\"default\"],{when:data.isHome}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_post__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{when:data.isPost}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_page__WEBPACK_IMPORTED_MODULE_6__[\"default\"],{when:data.isPage}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_page__WEBPACK_IMPORTED_MODULE_6__[\"default\"],{when:data.isBook}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_error__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{when:data.isError})]})})]});};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(Root));const Header=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"header\", false?undefined:{target:\"emeuo953\",label:\"Header\"})(\"background-color:#ededed;border-width:0 0 2px 0;border-style:solid;border-color:\",props=>props.isPostType?props.isPage?'#FBACA5':'#61adad':'lightgrey',\";h1{color:#4c4c4c;font-size:49px;text-align:center;font-weight:200;}#site-description{text-align:center;line-height:1.5;font-size:0.9em;padding-top:5px;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcU2FyYVxcRGVza3RvcFxcaXdkXFxpd2QtZmluYWxcXGhlbGxvLWZyb250aXR5XFxwYWNrYWdlc1xcYm9va3NcXHNyY1xcY29tcG9uZW50c1xcaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0U0QiIsImZpbGUiOiJDOlxcVXNlcnNcXFNhcmFcXERlc2t0b3BcXGl3ZFxcaXdkLWZpbmFsXFxoZWxsby1mcm9udGl0eVxccGFja2FnZXNcXGJvb2tzXFxzcmNcXGNvbXBvbmVudHNcXGluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiXHJcbmltcG9ydCB7IGNvbm5lY3QsIEdsb2JhbCwgY3NzLCBzdHlsZWQsIEhlYWQgfSBmcm9tIFwiZnJvbnRpdHlcIlxyXG5pbXBvcnQgTGluayBmcm9tIFwiQGZyb250aXR5L2NvbXBvbmVudHMvbGlua1wiXHJcbmltcG9ydCBTd2l0Y2ggZnJvbSBcIkBmcm9udGl0eS9jb21wb25lbnRzL3N3aXRjaFwiXHJcbmltcG9ydCBMaXN0IGZyb20gXCIuL2xpc3RcIlxyXG5pbXBvcnQgUG9zdCBmcm9tIFwiLi9wb3N0XCJcclxuaW1wb3J0IFBhZ2UgZnJvbSBcIi4vcGFnZVwiXHJcbmltcG9ydCBMb2FkaW5nIGZyb20gXCIuL2xvYWRpbmdcIlxyXG5pbXBvcnQgRXJyb3IgZnJvbSBcIi4vZXJyb3JcIlxyXG5pbXBvcnQgSG9tZSBmcm9tIFwiLi9ob21lXCJcclxuXHJcbmNvbnN0IFJvb3QgPSAoeyBzdGF0ZSwgYWN0aW9ucyB9KSA9PiB7XHJcbiAgICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluaylcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPD5cclxuICAgICAgICAgICAgPEhlYWQ+XHJcbiAgICAgICAgICAgICAgICA8dGl0bGU+TmljaG9sYXMgU3BhcmtzIC0gQW1lcmljYW4gTm92ZWxpc3Q8L3RpdGxlPlxyXG4gICAgICAgICAgICAgICAgPG1ldGFcclxuICAgICAgICAgICAgICAgICAgICBuYW1lPVwiTmljaG9sYXMgU3BhcmtzIGlzIGEgZmFtb3VzIGF1dGhvci4uXCJcclxuICAgICAgICAgICAgICAgICAgICBjb250ZW50PVwiQmFzZWQgb24gdGhlIEZyb250aXR5IHN0ZXAgYnkgc3RlcCB0dXRvcmlhbFwiXHJcbiAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8L0hlYWQ+XHJcbiAgICAgICAgPEdsb2JhbFxyXG4gICAgICAgICAgICBzdHlsZXM9e2Nzc2BcclxuICAgICAgICAgICAgICAqIHtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBodG1sIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBWZXJkYW5hLCBzYW5zLXNlcmlmOyBcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgaDEsaDIsaDMsaDQsaDUsaDYge1xyXG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgICAgICAgICAgICAgfVxyXG4gICBcclxuICAgICAgICBgfVxyXG4gICAgICAgICAgICAvPlxyXG5cclxuICAgICAgICAgICAgPEhlYWRlciBpc1Bvc3RUeXBlPXtkYXRhLmlzUG9zdFR5cGV9IGlzUGFnZT17ZGF0YS5pc1BhZ2V9PlxyXG4gICAgICAgICAgICAgICAgPEhlYWRlckNvbnRlbnQ+XHJcbiAgICAgICAgICAgICAgICA8aDE+TmljaG9sYXMgU3BhcmtzPC9oMT5cclxuICAgICAgICAgICAgICAgIDxwIGlkPVwic2l0ZS1kZXNjcmlwdGlvblwiPkFtZXJpY2FuIE5vdmVsaXN0PC9wPlxyXG4gICAgICAgICAgICAgICAgPE1lbnU+XHJcbiAgICAgICAgICAgICAgICAgICAgPExpbmsgbGluaz1cIi9cIj5Ib21lPC9MaW5rPlxyXG4gICAgICAgICAgICAgICAgICAgIDxiciAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxMaW5rIGxpbms9XCIvYXV0aG9yLWJpb1wiPkFib3V0PC9MaW5rPlxyXG4gICAgICAgICAgICAgICAgICAgIDxiciAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxMaW5rIGxpbms9XCIvYm9va1wiPkJvb2tzPC9MaW5rPlxyXG4gICAgICAgICAgICAgICAgICAgIDxiciAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxMaW5rIGxpbms9XCIvY29udGFjdFwiPkNvbnRhY3QgVXM8L0xpbms+XHJcbiAgICAgICAgICAgICAgICA8L01lbnU+XHJcbiAgICAgICAgICAgICAgICA8L0hlYWRlckNvbnRlbnQ+XHJcbiAgICAgICAgICAgIDwvSGVhZGVyPlxyXG4gICAgICAgICAgICA8aHIgLz5cclxuICAgICAgICAgICAgPE1haW4+XHJcbiAgICAgICAgICAgICAgICA8U3dpdGNoPlxyXG4gICAgICAgICAgICAgICAgICAgIDxMb2FkaW5nIHdoZW49e2RhdGEuaXNGZXRjaGluZ30gLz5cclxuICAgICAgICAgICAgICAgICAgICA8TGlzdCB3aGVuPXtkYXRhLmlzQXJjaGl2ZX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8SG9tZSB3aGVuPXtkYXRhLmlzSG9tZX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8UG9zdCB3aGVuPXtkYXRhLmlzUG9zdH0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8UGFnZSB3aGVuPXtkYXRhLmlzUGFnZX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8UGFnZSB3aGVuPXtkYXRhLmlzQm9va30gLz5cclxuICAgICAgICAgICAgICAgICAgICA8RXJyb3Igd2hlbj17ZGF0YS5pc0Vycm9yfSAvPlxyXG4gICAgICAgICAgICAgICAgPC9Td2l0Y2g+XHJcbiAgICAgICAgICAgIDwvTWFpbj5cclxuICAgICAgICA8Lz5cclxuICAgIClcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChSb290KVxyXG5cclxuY29uc3QgSGVhZGVyID0gc3R5bGVkLmhlYWRlcmBcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWRlZGVkO1xyXG4gIGJvcmRlci13aWR0aDogMCAwIDJweCAwO1xyXG4gIGJvcmRlci1zdHlsZTogc29saWQ7XHJcbiAgYm9yZGVyLWNvbG9yOiAkeyBwcm9wcyA9PiBwcm9wcy5pc1Bvc3RUeXBlID8gKCBwcm9wcy5pc1BhZ2UgPyAnI0ZCQUNBNScgOiAnIzYxYWRhZCcgKSA6ICdsaWdodGdyZXknfTtcclxuXHJcbiAgaDEge1xyXG4gICAgY29sb3I6ICM0YzRjNGM7XHJcbiAgICBmb250LXNpemU6IDQ5cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBmb250LXdlaWdodDogMjAwO1xyXG4gICAgXHJcbiAgfVxyXG4gICNzaXRlLWRlc2NyaXB0aW9uIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XHJcbiAgICBmb250LXNpemU6IDAuOWVtO1xyXG4gICAgcGFkZGluZy10b3A6IDVweDtcclxuICB9XHJcbmBcclxuY29uc3QgSGVhZGVyQ29udGVudCA9IHN0eWxlZC5kaXZgXHJcbiAgbWF4LXdpZHRoOiA4MDBweDtcclxuICBwYWRkaW5nOiAyZW0gMWVtO1xyXG4gIG1hcmdpbjogYXV0bztcclxuICBcclxuYFxyXG5jb25zdCBNYWluID0gc3R5bGVkLm1haW5gXHJcbiAgbWF4LXdpZHRoOiA4MDBweDtcclxuICBwYWRkaW5nOiAxZW07XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG5cclxuICBpbWcge1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gIH1cclxuICBoMiB7XHJcbiAgICBtYXJnaW46IDAuNWVtIDA7XHJcbiAgICBjb2xvcjogIzYxYWRhZDtcclxuICAgIGZvbnQtZmFtaWx5OiBsYXRvO1xyXG4gICAgZm9udC1zaXplOiA0MHB4O1xyXG4gICAgcGFkZGluZzogMzBweCAwO1xyXG4gIH1cclxuICBwIHtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjVlbTtcclxuICAgIG1hcmdpbi1ib3R0b206IDAuNzVlbTtcclxuICB9XHJcbiAgZmlnY2FwdGlvbiB7XHJcbiAgICBjb2xvcjogIzgyODI4MjtcclxuICAgIGZvbnQtc2l6ZTogMC44ZW07XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxZW07XHJcbiAgfVxyXG4gIC5zaG9ydGNvZGVfcmV2aWV3IHsgIFxyXG4gICAgbWFyZ2luLXRvcDogNTBweDtcclxuICAgIHdpZHRoOiA2MCU7XHJcbiAgXHJcbiAgICBoNHtcclxuICAgICAgICBjb2xvcjogIzYxYWRhZDtcclxuICAgICAgICBmb250LXNpemU6IDI4cHg7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMThweDtcclxuICAgIH1cclxuICAgIGg1IHtcclxuICAgICAgICBwYWRkaW5nOiAxMnB4IDA7XHJcbiAgICB9ICAgIFxyXG4gICAgYSB7XHJcbiAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICBjb2xvcjogI2ZhYWNhNTtcclxuICAgICAgIGZvbnQtc2l6ZTogMjNweDtcclxuXHJcbiAgICB9XHJcbiAgICBhOmhvdmVyIHtcclxuICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgfVxyXG4gICAgdWwge1xyXG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICAgICAgcGFkZGluZy10b3A6IDVweDtcclxuICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICAgICAgbGkge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiA0cHggMiU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcCB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMjBweDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMS41O1xyXG4gICAgfVxyXG59ICAgXHJcbi5ib29rX2RldGFpbHMge1xyXG4gICAgbWFyZ2luOiAyMHB4IDA7XHJcbiAgICBcclxuICAgIHVsIHtcclxuICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIH1cclxuICAgIGg0IHtcclxuICAgICAgY29sb3I6ICM2MWFkYWQ7XHJcbiAgICAgIGZvbnQtc2l6ZTogMjhweDtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMThweDtcclxuICAgICAgbWFyZ2luLXRvcDogNDBweDtcclxuICAgIH1cclxuICAgIGg2IHtcclxuICAgIGNvbG9yOiAjZmFhY2E1O1xyXG4gICAgZm9udC1zaXplOiAyM3B4O1xyXG4gICAgbWFyZ2luLXRvcDogMzBweDtcclxuICAgIH1cclxufVxyXG4ucmV2aWV3LWRldGFpbHMsIC5yZXZpZXctY29udGVudCB7XHJcbiAgIGRpc3BsYXk6bm9uZTtcclxufVxyXG4ucmV2aWV3X2JvZHkgcHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIGNvbG9yOiAjNWM1YzVjO1xyXG59ICBcclxuLnJldmlldy1kZXRhaWwgdWwgbGl7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuYmxvY2txdW90ZSB7XHJcbiAgICBjb2xvcjogI2ZhYWNhNTtcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICAgIG1hcmdpbjogNTBweCAxMCU7XHJcbiAgICB3aWR0aDogODAlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICB9XHJcbi53cC1ibG9jay1pbWFnZSB7XHJcbiAgICBtYXJnaW46IDMwcHggMDtcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbn1cclxuLndwLWJsb2NrLWNvbHVtbnMge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgXHJcbiAgICAud3AtYmxvY2stY29sdW1uIHtcclxuICAgICAgICB3aWR0aDogNDAlO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGg1IHtcclxuICAgICAgICAgICAgY29sb3I6ICM2MWFkYWQ7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjNweDtcclxuICAgICAgICAgICAgbWFyZ2luOiAyMHB4IDAgMTBweCAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICB1bCB7XHJcbiAgICAgICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBsaSB7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiA4cHggMDtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTdweFxyXG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5gXHJcbmNvbnN0IE1lbnUgPSBzdHlsZWQubmF2YFxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICBtYXJnaW4tdG9wOiAxZW07XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAxZW07XHJcbiAgXHJcbiAgJiA+IGEge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxZW07XHJcbiAgICBjb2xvcjogIzAwMDtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIHBhZGRpbmctdG9wOiAzMHB4O1xyXG4gICAgcGFkZGluZy1yaWdodDogMjVweDtcclxuIH1cclxuIFxyXG4gYTpob3ZlciB7XHJcbiAgICAgY29sb3I6ICM5NDk0OTQ7XHJcbiB9XHJcbmAiXX0= */\"));const HeaderContent=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"div\", false?undefined:{target:\"emeuo952\",label:\"HeaderContent\"})( false?undefined:{name:\"1peo0kf\",styles:\"max-width:800px;padding:2em 1em;margin:auto\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Main=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"main\", false?undefined:{target:\"emeuo951\",label:\"Main\"})( false?undefined:{name:\"hlk686\",styles:\"max-width:800px;padding:1em;margin:auto;img{max-width:100%;height:auto;}h2{margin:0.5em 0;color:#61adad;font-family:lato;font-size:40px;padding:30px 0;}p{line-height:1.5em;margin-bottom:0.75em;}figcaption{color:#828282;font-size:0.8em;margin-bottom:1em;}.shortcode_review{margin-top:50px;width:60%;h4{color:#61adad;font-size:28px;margin-bottom:18px;}h5{padding:12px 0;}a{text-decoration:none;color:#faaca5;font-size:23px;}a:hover{text-decoration:underline;}ul{list-style:none;padding-top:5px;font-size:14px;li{padding:4px 2%;}}p{margin-top:20px;line-height:1.5;}}.book_details{margin:20px 0;ul{list-style:none;font-size:16px;}h4{color:#61adad;font-size:28px;margin-bottom:18px;margin-top:40px;}h6{color:#faaca5;font-size:23px;margin-top:30px;}}.review-details,.review-content{display:none;}.review_body p{font-size:16px;color:#5c5c5c;}.review-detail ul li{font-size:14px;}blockquote{color:#faaca5;font-style:italic;margin:50px 10%;width:80%;text-align:center;}.wp-block-image{margin:30px 0;width:80%;height:auto;}.wp-block-columns{display:flex;width:100%;.wp-block-column{width:40%;h5{color:#61adad;font-size:23px;margin:20px 0 10px 0;}ul{list-style:none;li{padding:8px 0;font-size:17px font-weight:300;}}}}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Menu=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"nav\", false?undefined:{target:\"emeuo950\",label:\"Menu\"})( false?undefined:{name:\"148vwh9\",styles:\"display:flex;flex-direction:row;margin-top:1em;font-size:16px;margin-left:1em;&>a{margin-right:1em;color:#000;text-decoration:none;padding-top:30px;padding-right:25px;}a:hover{color:#949494;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9ib29rcy9zcmMvY29tcG9uZW50cy9pbmRleC5qcz9kNTYxIl0sIm5hbWVzIjpbIlJvb3QiLCJzdGF0ZSIsImFjdGlvbnMiLCJkYXRhIiwic291cmNlIiwiZ2V0Iiwicm91dGVyIiwibGluayIsImlzUG9zdFR5cGUiLCJpc1BhZ2UiLCJpc0ZldGNoaW5nIiwiaXNBcmNoaXZlIiwiaXNIb21lIiwiaXNQb3N0IiwiaXNCb29rIiwiaXNFcnJvciIsImNvbm5lY3QiLCJIZWFkZXIiLCJwcm9wcyIsIkhlYWRlckNvbnRlbnQiLCJNYWluIiwiTWVudSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7MmtSQVdBLEtBQU1BLEtBQUksQ0FBRyxDQUFDLENBQUVDLEtBQUYsQ0FBU0MsT0FBVCxDQUFELEdBQXdCLENBQ2pDLEtBQU1DLEtBQUksQ0FBR0YsS0FBSyxDQUFDRyxNQUFOLENBQWFDLEdBQWIsQ0FBaUJKLEtBQUssQ0FBQ0ssTUFBTixDQUFhQyxJQUE5QixDQUFiLENBQ0EsTUFDSSwwSkFDSSx5RUFBQyw2Q0FBRCxZQUNJLGlJQURKLENBRUksZ0ZBQ0ksSUFBSSxDQUFDLHNDQURULENBRUksT0FBTyxDQUFDLDZDQUZaLEVBRkosR0FESixDQVFBLHdFQUFDLCtDQUFELEVBQ0ksTUFBTSxLQURWLEVBUkEsQ0F5Qkksd0VBQUMsTUFBRCxFQUFRLFVBQVUsQ0FBRUosSUFBSSxDQUFDSyxVQUF6QixDQUFxQyxNQUFNLENBQUVMLElBQUksQ0FBQ00sTUFBbEQsVUFDSSx5RUFBQyxhQUFELFlBQ0EsMEdBREEsQ0FFQSw2RUFBRyxFQUFFLENBQUMsa0JBQU4sK0JBRkEsQ0FHQSx5RUFBQyxJQUFELFlBQ0ksd0VBQUMsaUVBQUQsRUFBTSxJQUFJLENBQUMsR0FBWCxrQkFESixDQUVJLGdGQUZKLENBR0ksd0VBQUMsaUVBQUQsRUFBTSxJQUFJLENBQUMsYUFBWCxtQkFISixDQUlJLGdGQUpKLENBS0ksd0VBQUMsaUVBQUQsRUFBTSxJQUFJLENBQUMsT0FBWCxtQkFMSixDQU1JLGdGQU5KLENBT0ksd0VBQUMsaUVBQUQsRUFBTSxJQUFJLENBQUMsVUFBWCx3QkFQSixHQUhBLEdBREosRUF6QkosQ0F3Q0ksZ0ZBeENKLENBeUNJLHdFQUFDLElBQUQsV0FDSSx5RUFBQyxtRUFBRCxZQUNJLHdFQUFDLGdEQUFELEVBQVMsSUFBSSxDQUFFTixJQUFJLENBQUNPLFVBQXBCLEVBREosQ0FFSSx3RUFBQyw2Q0FBRCxFQUFNLElBQUksQ0FBRVAsSUFBSSxDQUFDUSxTQUFqQixFQUZKLENBR0ksd0VBQUMsNkNBQUQsRUFBTSxJQUFJLENBQUVSLElBQUksQ0FBQ1MsTUFBakIsRUFISixDQUlJLHdFQUFDLDZDQUFELEVBQU0sSUFBSSxDQUFFVCxJQUFJLENBQUNVLE1BQWpCLEVBSkosQ0FLSSx3RUFBQyw2Q0FBRCxFQUFNLElBQUksQ0FBRVYsSUFBSSxDQUFDTSxNQUFqQixFQUxKLENBTUksd0VBQUMsNkNBQUQsRUFBTSxJQUFJLENBQUVOLElBQUksQ0FBQ1csTUFBakIsRUFOSixDQU9JLHdFQUFDLDhDQUFELEVBQU8sSUFBSSxDQUFFWCxJQUFJLENBQUNZLE9BQWxCLEVBUEosR0FESixFQXpDSixHQURKLENBdURILENBekRELENBMkRlQyx1SEFBTyxDQUFDaEIsSUFBRCxDQUF0QixFQUVBLEtBQU1pQixPQUFNLDBNQUlPQyxLQUFLLEVBQUlBLEtBQUssQ0FBQ1YsVUFBTixDQUFxQlUsS0FBSyxDQUFDVCxNQUFOLENBQWUsU0FBZixDQUEyQixTQUFoRCxDQUE4RCxXQUo5RSw4dlFBQVosQ0FvQkEsS0FBTVUsY0FBYSw4MFFBQW5CLENBTUEsS0FBTUMsS0FBSSxpOVNBQVYsQ0E0SEEsS0FBTUMsS0FBSSx5OVFBQVYiLCJmaWxlIjoiLi9wYWNrYWdlcy9ib29rcy9zcmMvY29tcG9uZW50cy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIlxyXG5pbXBvcnQgeyBjb25uZWN0LCBHbG9iYWwsIGNzcywgc3R5bGVkLCBIZWFkIH0gZnJvbSBcImZyb250aXR5XCJcclxuaW1wb3J0IExpbmsgZnJvbSBcIkBmcm9udGl0eS9jb21wb25lbnRzL2xpbmtcIlxyXG5pbXBvcnQgU3dpdGNoIGZyb20gXCJAZnJvbnRpdHkvY29tcG9uZW50cy9zd2l0Y2hcIlxyXG5pbXBvcnQgTGlzdCBmcm9tIFwiLi9saXN0XCJcclxuaW1wb3J0IFBvc3QgZnJvbSBcIi4vcG9zdFwiXHJcbmltcG9ydCBQYWdlIGZyb20gXCIuL3BhZ2VcIlxyXG5pbXBvcnQgTG9hZGluZyBmcm9tIFwiLi9sb2FkaW5nXCJcclxuaW1wb3J0IEVycm9yIGZyb20gXCIuL2Vycm9yXCJcclxuaW1wb3J0IEhvbWUgZnJvbSBcIi4vaG9tZVwiXHJcblxyXG5jb25zdCBSb290ID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xyXG4gICAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDw+XHJcbiAgICAgICAgICAgIDxIZWFkPlxyXG4gICAgICAgICAgICAgICAgPHRpdGxlPk5pY2hvbGFzIFNwYXJrcyAtIEFtZXJpY2FuIE5vdmVsaXN0PC90aXRsZT5cclxuICAgICAgICAgICAgICAgIDxtZXRhXHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZT1cIk5pY2hvbGFzIFNwYXJrcyBpcyBhIGZhbW91cyBhdXRob3IuLlwiXHJcbiAgICAgICAgICAgICAgICAgICAgY29udGVudD1cIkJhc2VkIG9uIHRoZSBGcm9udGl0eSBzdGVwIGJ5IHN0ZXAgdHV0b3JpYWxcIlxyXG4gICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPC9IZWFkPlxyXG4gICAgICAgIDxHbG9iYWxcclxuICAgICAgICAgICAgc3R5bGVzPXtjc3NgXHJcbiAgICAgICAgICAgICAgKiB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgICAgICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgaHRtbCB7XHJcbiAgICAgICAgICAgICAgICBmb250LWZhbWlseTogVmVyZGFuYSwgc2Fucy1zZXJpZjsgXHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIGgxLGgyLGgzLGg0LGg1LGg2IHtcclxuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICAgICAgICAgICAgIH1cclxuICAgXHJcbiAgICAgICAgYH1cclxuICAgICAgICAgICAgLz5cclxuXHJcbiAgICAgICAgICAgIDxIZWFkZXIgaXNQb3N0VHlwZT17ZGF0YS5pc1Bvc3RUeXBlfSBpc1BhZ2U9e2RhdGEuaXNQYWdlfT5cclxuICAgICAgICAgICAgICAgIDxIZWFkZXJDb250ZW50PlxyXG4gICAgICAgICAgICAgICAgPGgxPk5pY2hvbGFzIFNwYXJrczwvaDE+XHJcbiAgICAgICAgICAgICAgICA8cCBpZD1cInNpdGUtZGVzY3JpcHRpb25cIj5BbWVyaWNhbiBOb3ZlbGlzdDwvcD5cclxuICAgICAgICAgICAgICAgIDxNZW51PlxyXG4gICAgICAgICAgICAgICAgICAgIDxMaW5rIGxpbms9XCIvXCI+SG9tZTwvTGluaz5cclxuICAgICAgICAgICAgICAgICAgICA8YnIgLz5cclxuICAgICAgICAgICAgICAgICAgICA8TGluayBsaW5rPVwiL2F1dGhvci1iaW9cIj5BYm91dDwvTGluaz5cclxuICAgICAgICAgICAgICAgICAgICA8YnIgLz5cclxuICAgICAgICAgICAgICAgICAgICA8TGluayBsaW5rPVwiL2Jvb2tcIj5Cb29rczwvTGluaz5cclxuICAgICAgICAgICAgICAgICAgICA8YnIgLz5cclxuICAgICAgICAgICAgICAgICAgICA8TGluayBsaW5rPVwiL2NvbnRhY3RcIj5Db250YWN0IFVzPC9MaW5rPlxyXG4gICAgICAgICAgICAgICAgPC9NZW51PlxyXG4gICAgICAgICAgICAgICAgPC9IZWFkZXJDb250ZW50PlxyXG4gICAgICAgICAgICA8L0hlYWRlcj5cclxuICAgICAgICAgICAgPGhyIC8+XHJcbiAgICAgICAgICAgIDxNYWluPlxyXG4gICAgICAgICAgICAgICAgPFN3aXRjaD5cclxuICAgICAgICAgICAgICAgICAgICA8TG9hZGluZyB3aGVuPXtkYXRhLmlzRmV0Y2hpbmd9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPExpc3Qgd2hlbj17ZGF0YS5pc0FyY2hpdmV9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPEhvbWUgd2hlbj17ZGF0YS5pc0hvbWV9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPFBvc3Qgd2hlbj17ZGF0YS5pc1Bvc3R9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPFBhZ2Ugd2hlbj17ZGF0YS5pc1BhZ2V9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPFBhZ2Ugd2hlbj17ZGF0YS5pc0Jvb2t9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPEVycm9yIHdoZW49e2RhdGEuaXNFcnJvcn0gLz5cclxuICAgICAgICAgICAgICAgIDwvU3dpdGNoPlxyXG4gICAgICAgICAgICA8L01haW4+XHJcbiAgICAgICAgPC8+XHJcbiAgICApXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoUm9vdClcclxuXHJcbmNvbnN0IEhlYWRlciA9IHN0eWxlZC5oZWFkZXJgXHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VkZWRlZDtcclxuICBib3JkZXItd2lkdGg6IDAgMCAycHggMDtcclxuICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4gIGJvcmRlci1jb2xvcjogJHsgcHJvcHMgPT4gcHJvcHMuaXNQb3N0VHlwZSA/ICggcHJvcHMuaXNQYWdlID8gJyNGQkFDQTUnIDogJyM2MWFkYWQnICkgOiAnbGlnaHRncmV5J307XHJcblxyXG4gIGgxIHtcclxuICAgIGNvbG9yOiAjNGM0YzRjO1xyXG4gICAgZm9udC1zaXplOiA0OXB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC13ZWlnaHQ6IDIwMDtcclxuICAgIFxyXG4gIH1cclxuICAjc2l0ZS1kZXNjcmlwdGlvbiB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBsaW5lLWhlaWdodDogMS41O1xyXG4gICAgZm9udC1zaXplOiAwLjllbTtcclxuICAgIHBhZGRpbmctdG9wOiA1cHg7XHJcbiAgfVxyXG5gXHJcbmNvbnN0IEhlYWRlckNvbnRlbnQgPSBzdHlsZWQuZGl2YFxyXG4gIG1heC13aWR0aDogODAwcHg7XHJcbiAgcGFkZGluZzogMmVtIDFlbTtcclxuICBtYXJnaW46IGF1dG87XHJcbiAgXHJcbmBcclxuY29uc3QgTWFpbiA9IHN0eWxlZC5tYWluYFxyXG4gIG1heC13aWR0aDogODAwcHg7XHJcbiAgcGFkZGluZzogMWVtO1xyXG4gIG1hcmdpbjogYXV0bztcclxuXHJcbiAgaW1nIHtcclxuICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogYXV0bztcclxuICB9XHJcbiAgaDIge1xyXG4gICAgbWFyZ2luOiAwLjVlbSAwO1xyXG4gICAgY29sb3I6ICM2MWFkYWQ7XHJcbiAgICBmb250LWZhbWlseTogbGF0bztcclxuICAgIGZvbnQtc2l6ZTogNDBweDtcclxuICAgIHBhZGRpbmc6IDMwcHggMDtcclxuICB9XHJcbiAgcCB7XHJcbiAgICBsaW5lLWhlaWdodDogMS41ZW07XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwLjc1ZW07XHJcbiAgfVxyXG4gIGZpZ2NhcHRpb24ge1xyXG4gICAgY29sb3I6ICM4MjgyODI7XHJcbiAgICBmb250LXNpemU6IDAuOGVtO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xyXG4gIH1cclxuICAuc2hvcnRjb2RlX3JldmlldyB7ICBcclxuICAgIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgICB3aWR0aDogNjAlO1xyXG4gIFxyXG4gICAgaDR7XHJcbiAgICAgICAgY29sb3I6ICM2MWFkYWQ7XHJcbiAgICAgICAgZm9udC1zaXplOiAyOHB4O1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XHJcbiAgICB9XHJcbiAgICBoNSB7XHJcbiAgICAgICAgcGFkZGluZzogMTJweCAwO1xyXG4gICAgfSAgICBcclxuICAgIGEge1xyXG4gICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgY29sb3I6ICNmYWFjYTU7XHJcbiAgICAgICBmb250LXNpemU6IDIzcHg7XHJcblxyXG4gICAgfVxyXG4gICAgYTpob3ZlciB7XHJcbiAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICAgIH1cclxuICAgIHVsIHtcclxuICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgICAgIHBhZGRpbmctdG9wOiA1cHg7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgIGxpIHtcclxuICAgICAgICAgICAgcGFkZGluZzogNHB4IDIlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHAge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNTtcclxuICAgIH1cclxufSAgIFxyXG4uYm9va19kZXRhaWxzIHtcclxuICAgIG1hcmdpbjogMjBweCAwO1xyXG4gICAgXHJcbiAgICB1bCB7XHJcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICB9XHJcbiAgICBoNCB7XHJcbiAgICAgIGNvbG9yOiAjNjFhZGFkO1xyXG4gICAgICBmb250LXNpemU6IDI4cHg7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XHJcbiAgICAgIG1hcmdpbi10b3A6IDQwcHg7XHJcbiAgICB9XHJcbiAgICBoNiB7XHJcbiAgICBjb2xvcjogI2ZhYWNhNTtcclxuICAgIGZvbnQtc2l6ZTogMjNweDtcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICB9XHJcbn1cclxuLnJldmlldy1kZXRhaWxzLCAucmV2aWV3LWNvbnRlbnQge1xyXG4gICBkaXNwbGF5Om5vbmU7XHJcbn1cclxuLnJldmlld19ib2R5IHB7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBjb2xvcjogIzVjNWM1YztcclxufSAgXHJcbi5yZXZpZXctZGV0YWlsIHVsIGxpe1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcbmJsb2NrcXVvdGUge1xyXG4gICAgY29sb3I6ICNmYWFjYTU7XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgICBtYXJnaW46IDUwcHggMTAlO1xyXG4gICAgd2lkdGg6IDgwJTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgfVxyXG4ud3AtYmxvY2staW1hZ2Uge1xyXG4gICAgbWFyZ2luOiAzMHB4IDA7XHJcbiAgICB3aWR0aDogODAlO1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG59XHJcbi53cC1ibG9jay1jb2x1bW5zIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIFxyXG4gICAgLndwLWJsb2NrLWNvbHVtbiB7XHJcbiAgICAgICAgd2lkdGg6IDQwJTtcclxuICAgICAgICBcclxuICAgICAgICBoNSB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAjNjFhZGFkO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDIzcHg7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMjBweCAwIDEwcHggMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdWwge1xyXG4gICAgICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgbGkge1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogOHB4IDA7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE3cHhcclxuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuYFxyXG5jb25zdCBNZW51ID0gc3R5bGVkLm5hdmBcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgbWFyZ2luLXRvcDogMWVtO1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuICBtYXJnaW4tbGVmdDogMWVtO1xyXG4gIFxyXG4gICYgPiBhIHtcclxuICAgIG1hcmdpbi1yaWdodDogMWVtO1xyXG4gICAgY29sb3I6ICMwMDA7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBwYWRkaW5nLXRvcDogMzBweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDI1cHg7XHJcbiB9XHJcbiBcclxuIGE6aG92ZXIge1xyXG4gICAgIGNvbG9yOiAjOTQ5NDk0O1xyXG4gfVxyXG5gIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/books/src/components/index.js\n");

/***/ })

})